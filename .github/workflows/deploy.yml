name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  common:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Install Dependencies
        run: go mod download

  code_analysis:
    runs-on: ubuntu-latest
    needs: common
    name: Code Analysis
    steps:
      - name: Run go fmt
        run: go fmt ./...

      - name: Run go vet
        run: go vet ./...

      - name: Install and Run Staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Install and Run Golint
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...

  test:
    runs-on: ubuntu-latest
    needs: common
    name: Testing and Coverage
    steps:
      - name: Run Tests with Coverage
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: Generate Coverage Badge
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out

      - name: Verify Changed Files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit Changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push Changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.out

  deploy:
    name: Deploy para AWS Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Compilar código Go
        run: |
          GOOS=linux GOARCH=amd64 go build -o bootstrap -tags lambda.norpc cmd/main.go
          zip function.zip bootstrap

      - name: Fazer deploy da função Lambda
        run: |
          aws lambda update-function-code \
            --function-name lambda-gh-action \
            --zip-file fileb://function.zip
